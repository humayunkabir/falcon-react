{"version":3,"sources":["assets/img/generic/14.jpg","assets/img/generic/19.jpg","assets/img/generic/15.jpg","assets/img/generic/17.jpg","assets/img/generic/20.jpg","assets/img/generic/16.jpg","assets/img/generic/18.jpg","hoc/withAuthSplit.js","components/auth/split/Login.js","components/auth/split/Logout.js","components/auth/split/Registration.js","components/auth/split/ForgetPassword.js","components/auth/split/PasswordReset.js","components/auth/split/ConfirmMail.js","components/auth/split/LockScreen.js","components/auth/split/AuthSplitRoutes.js"],"names":["module","exports","__webpack_require__","p","withAuthSplit","OriginalComponent","props","_useState","useState","_useState2","Object","slicedToArray","bgProps","setBgProps","react_default","a","createElement","Container","fluid","Row","className","Col","xs","Background","sm","md","noGutters","lg","xl","Card","CardHeader","react_router_dom","to","CardBody","assign","_ref","useEffect","image","bgImg","position","react","Flex","align","justify","LoginForm","layout","hasLabel","LogoutContent","titleTag","RegistrationForm","overlay","ForgetPasswordForm","PasswordResetForm","ConfirmMailContent","email","Media","Avatar","src","team1","size","body","LockScreenForm","AuthSplitRoutes","url","match","react_router","path","concat","exact","component","Login","Logout","Registration","ForgetPassword","ConfirmMail","PasswordReset","LockScreen"],"mappings":"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","file":"static/js/10.b8c51826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/14.2e238fd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/19.3c467e00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15.fe45522f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/17.5145db24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/20.c906bddb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.321fd6d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/18.80c92e6e.jpg\";","import React, { useState } from 'react';\nimport Container from 'reactstrap/es/Container';\nimport Background from '../components/common/Background';\nimport CardBody from 'reactstrap/es/CardBody';\nimport CardHeader from 'reactstrap/es/CardHeader';\nimport { Card, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst withAuthSplit = OriginalComponent => {\n  const UpdatedComponent = props => {\n    // State\n    const [bgProps, setBgProps] = useState(null);\n\n    return (\n      <Container fluid>\n        <Row className=\"min-vh-100 bg-100\">\n          <Col xs={6} className=\"d-none d-lg-block\">\n            {bgProps && <Background {...bgProps} />}\n          </Col>\n          <Col sm={10} md={6} className=\"px-sm-0 align-self-center mx-auto py-5\">\n            <Row noGutters className=\"justify-content-center\">\n              <Col lg={9} xl={8} className=\"col-xxl-6\">\n                <Card>\n                  <CardHeader className=\"bg-split-card-header bg-circle-shape text-center p-2\">\n                    <Link\n                      className=\"text-white text-sans-serif font-weight-extra-bold fs-4 z-index-1 position-relative\"\n                      to=\"/\"\n                    >\n                      falcon\n                    </Link>\n                  </CardHeader>\n                  <CardBody className=\"p-4\">\n                    <OriginalComponent setBgProps={setBgProps} {...props} />\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n\n  return UpdatedComponent;\n};\n\nexport default withAuthSplit;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Flex from '../../common/Flex';\nimport LoginForm from '../LoginForm';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/14.jpg';\n\nconst Login = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 20%' }), [setBgProps]);\n\n  return (\n    <Fragment>\n      <Flex align=\"center\" justify=\"between\">\n        <h3>Login</h3>\n        <p className=\"mb-0 fs--1\">\n          <span className=\"font-weight-semi-bold\">New User? </span>\n          <Link to=\"/authentication/split/register\">Create account</Link>\n        </p>\n      </Flex>\n      <LoginForm layout=\"split\" hasLabel />\n    </Fragment>\n  );\n};\n\nLogin.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(Login);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport LogoutContent from '../LogoutContent';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/19.jpg';\n\nconst Logout = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\n\n  return (\n    <div className=\"text-center\">\n      <LogoutContent layout=\"split\" titleTag=\"h3\" />\n    </div>\n  );\n};\n\nLogout.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(Logout);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Flex from '../../common/Flex';\nimport RegistrationForm from '../RegistrationForm';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/15.jpg';\n\nconst Registration = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\n\n  return (\n    <Fragment>\n      <Flex align=\"center\" justify=\"between\">\n        <h3>Register</h3>\n        <p className=\"mb-0 fs--1\">\n          <span className=\"font-weight-semi-bold\">Already User? </span>\n          <Link to=\"/authentication/split/login\">Login</Link>\n        </p>\n      </Flex>\n      <RegistrationForm layout=\"split\" hasLabel />\n    </Fragment>\n  );\n};\n\nRegistration.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(Registration);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ForgetPasswordForm from '../ForgetPasswordForm';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/17.jpg';\n\nconst ForgetPassword = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 76%', overlay: true }), [setBgProps]);\n\n  return (\n    <div className=\"text-center\">\n      <h4 className=\"mb-0\"> Forgot your password?</h4>\n      <small>Enter your email and we'll send you a reset link.</small>\n      <ForgetPasswordForm layout=\"split\" />\n    </div>\n  );\n};\n\nForgetPassword.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(ForgetPassword);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PasswordResetForm from '../PasswordResetForm';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/20.jpg';\n\nconst PasswordReset = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\n\n  return (\n    <div className=\"text-center\">\n      <h3>Reset password</h3>\n      <PasswordResetForm layout=\"split\" hasLabel />\n    </div>\n  );\n};\n\nPasswordReset.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(PasswordReset);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ConfirmMailContent from '../ConfirmMailContent';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport bgImg from '../../../assets/img/generic/16.jpg';\n\nconst ConfirmMail = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 30%' }), [setBgProps]);\n\n  return (\n    <div className=\"text-center\">\n      <ConfirmMailContent email=\"xyz@abc.com\" layout=\"split\" titleTag=\"h3\" />\n    </div>\n  );\n};\n\nConfirmMail.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(ConfirmMail);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../common/Avatar';\nimport LockScreenForm from '../LockScreenForm';\nimport { Col, Media, Row } from 'reactstrap';\nimport withAuthSplit from '../../../hoc/withAuthSplit';\n\nimport team1 from '../../../assets/img/team/1.jpg';\nimport bgImg from '../../../assets/img/generic/18.jpg';\n\nconst LockScreen = ({ setBgProps }) => {\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\n\n  return (\n    <Row className=\"justify-content-center\">\n      <Col xs=\"auto\">\n        <Media className=\"align-items-center\">\n          <Avatar src={team1} size=\"4xl\" className=\"mr-4\" />\n          <Media body>\n            <h4>Hi! Emma</h4>\n            <p className=\"mb-0\">\n              Enter your password <br />\n              to access the admin.\n            </p>\n          </Media>\n        </Media>\n        <LockScreenForm className=\"mt-4\" />\n      </Col>\n    </Row>\n  );\n};\n\nLockScreen.propTypes = { setBgProps: PropTypes.func.isRequired };\n\nexport default withAuthSplit(LockScreen);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Registration from './Registration';\nimport ForgetPassword from './ForgetPassword';\nimport PasswordReset from './PasswordReset';\nimport ConfirmMail from './ConfirmMail';\nimport LockScreen from './LockScreen';\n\nconst AuthSplitRoutes = ({ match: { url } }) => (\n  <Switch>\n    <Route path={`${url}/login`} exact component={Login} />\n    <Route path={`${url}/logout`} exact component={Logout} />\n    <Route path={`${url}/register`} exact component={Registration} />\n    <Route path={`${url}/forget-password`} exact component={ForgetPassword} />\n    <Route path={`${url}/confirm-mail`} exact component={ConfirmMail} />\n    <Route path={`${url}/password-reset`} exact component={PasswordReset} />\n    <Route path={`${url}/lock-screen`} exact component={LockScreen} />\n\n    {/*Redirect*/}\n    <Redirect to=\"/errors/404\" />\n  </Switch>\n);\nAuthSplitRoutes.propTypes = { match: PropTypes.object.isRequired };\n\nexport default AuthSplitRoutes;\n"],"sourceRoot":""}