{"version":3,"sources":["components/dashboard/ActiveUsersMap.js"],"names":["chartOption","tooltip","show","trigger","backgroundColor","textStyle","color","formatter","name","value","Math","round","visualMap","min","max","text","realtime","calculable","inRange","series","type","mapType","roam","zoom","scaleLimit","itemStyle","normal","borderColor","borderWidth","areaStyle","emphasis","areaColor","label","data","activeUserByCountry","ActiveUsersMap","useState","duration","setDuration","className","size","boundary","icon","right","divider","echarts","option","style","width","height","xs","bsSize","id","onChange","target"],"mappings":"+SAqBMA,G,QAAc,CAClBC,QAAS,CACPC,MAAM,EACNC,QAAS,OACTC,gBAAiB,UACjBC,UAAW,CACTC,MAAO,QAETC,UAAW,YAA2B,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC1B,MAAM,WAAN,OAAkBD,EAAlB,sCAAoDC,EAAK,UAAMC,KAAKC,MAAMF,EAAQ,MAAW,KAGjGG,UAAW,CACTC,IAAK,EACLC,IAAK,IACLC,KAAM,CAAC,OAAQ,OACfC,UAAU,EACVC,YAAY,EACZC,QAAS,CACPZ,MAAO,CAAC,UAAW,aAGvBa,OAAQ,CACN,CACEC,KAAM,MACNC,QAAS,QACTC,MAAM,EACNC,KAAM,KACNC,WAAY,CACVX,IAAK,GACLC,IAAK,IAEPW,UAAW,CACTC,OAAQ,CACNC,YAAa,UACbC,YAAa,GACbC,UAAW,CACTvB,MAAO,YAGXwB,SAAU,CACRC,UAAW,UACXJ,YAAa,UACbK,MAAO,CACL9B,MAAM,EACNI,MAAO,UAIb2B,K,OAAMC,MA0DGC,UArDQ,WAAO,IAAD,EACKC,mBAAS,QADd,mBACpBC,EADoB,KACVC,EADU,KAG3B,OACE,kBAAC,IAAD,CAAMC,UAAU,sBACd,kBAAC,IAAD,CAAYA,UAAU,2CACpB,wBAAIA,UAAU,QAAd,gBACA,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgBjC,MAAM,OAAOkC,KAAK,KAAKD,UAAU,+BAA+BE,SAAS,YACvF,kBAAC,IAAD,CAAiBC,KAAK,aAAaH,UAAU,WAE/C,kBAAC,IAAD,CAAcA,UAAU,cAAcI,OAAK,GACzC,yBAAKJ,UAAU,iBACb,kBAAC,IAAD,aACA,kBAAC,IAAD,aACA,kBAAC,IAAD,eACA,kBAAC,IAAD,CAAcK,SAAO,IACrB,kBAAC,IAAD,CAAcL,UAAU,gBAAxB,WACA,kBAAC,IAAD,CAAcA,UAAU,eAAxB,cAKR,kBAAC,IAAD,CAAUA,UAAU,uBAClB,kBAAC,IAAD,CAAkBM,QAASA,IAASC,OAAQ9C,EAAa+C,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAE3F,kBAAC,IAAD,CAAYV,UAAU,YACpB,kBAAC,IAAD,CAAKA,UAAU,2BACb,kBAAC,IAAD,CAAKW,GAAG,QACN,kBAAC,IAAD,CACE9B,KAAK,SACL+B,OAAO,KACPC,GAAG,iBACH3C,MAAO4B,EACPgB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBhB,EAAYgB,EAAO7C,SAE7C,4BAAQA,MAAM,QAAd,eACA,4BAAQA,MAAM,SAAd,cACA,4BAAQA,MAAM,QAAd,eAGJ,kBAAC,IAAD,CAAKyC,GAAG,QACN,kBAAC,IAAD,CAAQ5C,MAAM,iBAAiBkC,KAAK,MAClC,0BAAMD,UAAU,iCAAhB,YADF,WAEE,kBAAC,IAAD,CAAiBG,KAAK,gBAAgBH,UAAU","file":"static/js/14.73708f7b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  CustomInput\n} from 'reactstrap';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/map/js/world';\nimport { activeUserByCountry } from '../../data/dashboard/activeUsers';\n\nconst chartOption = {\n  tooltip: {\n    show: true,\n    trigger: 'item',\n    backgroundColor: '#f9fafd',\n    textStyle: {\n      color: '#000'\n    },\n    formatter: function({ name, value }) {\n      return `<strong>${name}</strong><br/>Active user: ${value ? `${Math.round(value / 10000)}` : 0}`;\n    }\n  },\n  visualMap: {\n    min: 0,\n    max: 100000,\n    text: ['High', 'Low'],\n    realtime: false,\n    calculable: true,\n    inRange: {\n      color: ['#d8e2ef', '#2d7bcd']\n    }\n  },\n  series: [\n    {\n      type: 'map',\n      mapType: 'world',\n      roam: true,\n      zoom: 1.25,\n      scaleLimit: {\n        min: 0.9,\n        max: 17\n      },\n      itemStyle: {\n        normal: {\n          borderColor: '#d8e2ef',\n          borderWidth: 0.5,\n          areaStyle: {\n            color: '#d8e2ef'\n          }\n        },\n        emphasis: {\n          areaColor: '#0443a2',\n          borderColor: '#d8e2ef',\n          label: {\n            show: false,\n            color: '#fff'\n          }\n        }\n      },\n      data: activeUserByCountry\n    }\n  ]\n};\n\nconst ActiveUsersMap = () => {\n  const [duration, setDuration] = useState('week');\n\n  return (\n    <Card className=\"h-100 mt-3 mt-lg-0\">\n      <CardHeader className=\"bg-light d-flex justify-content-between\">\n        <h5 className=\"mb-0\">Active users</h5>\n        <UncontrolledDropdown className=\"text-sans-serif\">\n          <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 dropdown-caret-none\" boundary=\"viewport\">\n            <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n          </DropdownToggle>\n          <DropdownMenu className=\"border py-0\" right>\n            <div className=\"bg-white py-2\">\n              <DropdownItem>Edit</DropdownItem>\n              <DropdownItem>Move</DropdownItem>\n              <DropdownItem>Resize</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem className=\"text-warning\">Archive</DropdownItem>\n              <DropdownItem className=\"text-danger\">Delete</DropdownItem>\n            </div>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody className=\"p-3 overflow-hidden\">\n        <ReactEchartsCore echarts={echarts} option={chartOption} style={{ width: '100%', height: 420 }} />\n      </CardBody>\n      <CardFooter className=\"bg-light\">\n        <Row className=\"justify-content-between\">\n          <Col xs=\"auto\">\n            <CustomInput\n              type=\"select\"\n              bsSize=\"sm\"\n              id=\"selectDuration\"\n              value={duration}\n              onChange={({ target }) => setDuration(target.value)}\n            >\n              <option value=\"week\">Last 7 days</option>\n              <option value=\"month\">Last month</option>\n              <option value=\"year\">Last year</option>\n            </CustomInput>\n          </Col>\n          <Col xs=\"auto\">\n            <Button color=\"falcon-default\" size=\"sm\">\n              <span className=\"d-none d-sm-inline-block mr-1\">Location</span>Overview\n              <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--1\" />\n            </Button>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default ActiveUsersMap;\n"],"sourceRoot":""}